services:
  # Test runner container for postgres
  test-runner:
    build:
      context: ..
      dockerfile: tests/Dockerfile.test
    container_name: mcp-test-runner-postgres
    volumes:
      - ./:/app/tests:ro
    depends_on:
      - mcp-postgres
    networks:
      - mcp-test-network
    command: ["python", "/app/test_all.py", "postgres"]

  # PostgreSQL setup
  postgres:
    image: postgres:15-alpine
    container_name: postgres-test-db
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ../databases/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 2s
      timeout: 5s
      retries: 15
      start_period: 5s
    networks:
      - mcp-test-network

  mcp-postgres:
    build:
      context: ../databases/postgres
      dockerfile: Dockerfile
    container_name: mcp-postgres
    environment:
      DB_TYPE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: testdb
      DB_USER: testuser
      DB_PASSWORD: testpass
    expose:
      - "5000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 2s
      timeout: 5s
      retries: 15
      start_period: 3s
    networks:
      - mcp-test-network

volumes:
  postgres_test_data:

networks:
  mcp-test-network:
    driver: bridge 