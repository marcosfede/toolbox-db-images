version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mcp-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-mysql.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "testuser", "-ptestpass"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mcp-network

  # MCP PostgreSQL Server
  mcp-postgres:
    image: your-dockerhub-username/mcp-postgres:latest
    container_name: mcp-postgres
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_TYPE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: testdb
      DB_USER: testuser
      DB_PASSWORD: testpass
      TOOLBOX_PORT: 5000
      TOOLBOX_LOG_LEVEL: info
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "/app/scripts/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mcp-network

  # MCP MySQL Server
  mcp-mysql:
    image: your-dockerhub-username/mcp-mysql:latest
    container_name: mcp-mysql
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_TYPE: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: testdb
      DB_USER: testuser
      DB_PASSWORD: testpass
      TOOLBOX_PORT: 5001
      TOOLBOX_LOG_LEVEL: info
    ports:
      - "5001:5001"
    healthcheck:
      test: ["CMD", "/app/scripts/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mcp-network

  # MCP Snowflake Server (external connection example)
  mcp-snowflake:
    image: your-dockerhub-username/mcp-snowflake:latest
    container_name: mcp-snowflake
    environment:
      DB_TYPE: snowflake
      SNOWFLAKE_ACCOUNT: ${SNOWFLAKE_ACCOUNT}
      SNOWFLAKE_USER: ${SNOWFLAKE_USER}
      SNOWFLAKE_PASSWORD: ${SNOWFLAKE_PASSWORD}
      SNOWFLAKE_DATABASE: ${SNOWFLAKE_DATABASE}
      SNOWFLAKE_SCHEMA: ${SNOWFLAKE_SCHEMA:-PUBLIC}
      SNOWFLAKE_WAREHOUSE: ${SNOWFLAKE_WAREHOUSE}
      SNOWFLAKE_ROLE: ${SNOWFLAKE_ROLE}
      TOOLBOX_PORT: 5002
      TOOLBOX_LOG_LEVEL: info
    ports:
      - "5002:5002"
    healthcheck:
      test: ["CMD", "/app/scripts/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mcp-network
    profiles:
      - snowflake

  # MCP Redshift Server (external connection example)
  mcp-redshift:
    image: your-dockerhub-username/mcp-redshift:latest
    container_name: mcp-redshift
    environment:
      DB_TYPE: redshift
      REDSHIFT_HOST: ${REDSHIFT_HOST}
      REDSHIFT_PORT: ${REDSHIFT_PORT:-5439}
      REDSHIFT_DATABASE: ${REDSHIFT_DATABASE}
      REDSHIFT_USER: ${REDSHIFT_USER}
      REDSHIFT_PASSWORD: ${REDSHIFT_PASSWORD}
      REDSHIFT_SSL_MODE: ${REDSHIFT_SSL_MODE:-require}
      TOOLBOX_PORT: 5003
      TOOLBOX_LOG_LEVEL: info
    ports:
      - "5003:5003"
    healthcheck:
      test: ["CMD", "/app/scripts/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mcp-network
    profiles:
      - redshift

volumes:
  postgres_data:
    driver: local
  mysql_data:
    driver: local

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16