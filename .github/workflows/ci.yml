name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  build-dockerfiles:
    name: Build Dockerfiles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: [postgres, mysql, redis, sqlite]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          cd databases/${{ matrix.database }}
          docker build -f Dockerfile -t mcp-${{ matrix.database }}:latest .

      - name: Test image runs
        run: |
          docker run --rm mcp-${{ matrix.database }}:latest --help || true

  test-mcp-functionality:
    name: Test MCP Functionality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: [postgres, mysql, redis]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start test environment
        run: |
          cd databases/${{ matrix.database }}
          if [ -f docker-compose.yml ]; then
            echo "Starting ${{ matrix.database }} services..."
            docker-compose up -d --build
            echo "Waiting for services to be ready..."
            sleep 30
          else
            echo "No docker-compose.yml found for ${{ matrix.database }}, skipping"
            exit 0
          fi

      - name: Test MCP tools/list endpoint
        run: |
          cd databases/${{ matrix.database }}
          if [ -f docker-compose.yml ]; then
            # Get the MCP service container
            MCP_CONTAINER=$(docker-compose ps -q | head -1)
            if [ -n "$MCP_CONTAINER" ]; then
              echo "Testing MCP tools/list endpoint..."
              # Test MCP tools/list endpoint
              docker exec $MCP_CONTAINER curl -f -X POST http://localhost:5000/mcp \
                -H "Content-Type: application/json" \
                -d '{"jsonrpc": "2.0", "id": 1, "method": "tools/list"}' \
                && echo "✅ MCP test passed for ${{ matrix.database }}" \
                || echo "⚠️ MCP test failed for ${{ matrix.database }}"
            else
              echo "No MCP container found for ${{ matrix.database }}"
              exit 1
            fi
          fi

      - name: Clean up
        if: always()
        run: |
          cd databases/${{ matrix.database }}
          if [ -f docker-compose.yml ]; then
            docker-compose down -v
          fi
