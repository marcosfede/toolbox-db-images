version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dev-postgres
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mcp-dev

  # PostgreSQL Admin (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dev-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mcp.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin-servers.json:/pgadmin4/servers.json:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mcp-dev

  # MCP PostgreSQL Server
  mcp-postgres:
    build:
      context: ../../
      dockerfile: Dockerfile.postgres
    container_name: dev-mcp-postgres
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_TYPE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: testdb
      DB_USER: testuser
      DB_PASSWORD: testpass
      DB_SSL_MODE: prefer
      TOOLBOX_PORT: 5000
      TOOLBOX_LOG_LEVEL: debug
      ENABLE_STDIO: "false"
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "/app/scripts/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mcp-dev

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: dev-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-mysql.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "testuser", "-ptestpass"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mcp-dev

  # MySQL Admin (phpMyAdmin)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: dev-phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: testuser
      PMA_PASSWORD: testpass
      MYSQL_ROOT_PASSWORD: rootpass
    ports:
      - "8081:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mcp-dev

  # MCP MySQL Server
  mcp-mysql:
    build:
      context: ../../
      dockerfile: Dockerfile.mysql
    container_name: dev-mcp-mysql
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_TYPE: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: testdb
      DB_USER: testuser
      DB_PASSWORD: testpass
      TOOLBOX_PORT: 5001
      TOOLBOX_LOG_LEVEL: debug
      ENABLE_STDIO: "false"
    ports:
      - "5001:5001"
    healthcheck:
      test: ["CMD", "/app/scripts/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mcp-dev

  # MCP Test Runner
  mcp-tester:
    build:
      context: ../../
      dockerfile: tests/Dockerfile.test
    container_name: dev-mcp-tester
    depends_on:
      mcp-postgres:
        condition: service_healthy
      mcp-mysql:
        condition: service_healthy
    environment:
      POSTGRES_MCP_URL: http://mcp-postgres:5000
      MYSQL_MCP_URL: http://mcp-mysql:5001
      TEST_TIMEOUT: 60
    volumes:
      - ../../tests:/app/tests:ro
      - test_results:/app/results
    command: ["python", "-m", "pytest", "/app/tests", "-v", "--tb=short", "--html=/app/results/report.html"]
    networks:
      - mcp-dev
    profiles:
      - test

  # Test Results Viewer (nginx)
  test-viewer:
    image: nginx:alpine
    container_name: dev-test-viewer
    ports:
      - "8082:80"
    volumes:
      - test_results:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - mcp-dev
    profiles:
      - test

volumes:
  postgres_data:
    driver: local
  mysql_data:
    driver: local
  pgadmin_data:
    driver: local
  test_results:
    driver: local

networks:
  mcp-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16