name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  build-dockerfiles:
    name: Build Dockerfiles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: [postgres, mysql, sqlite, redis]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          cd databases/${{ matrix.database }}
          docker build -f Dockerfile -t toolbox-images/${{ matrix.database }}:latest .

      - name: Test image runs
        run: |
          docker run --rm toolbox-images/${{ matrix.database }}:latest --help || true

  test-mcp-functionality:
    name: Test MCP Functionality  
    runs-on: ubuntu-latest
    needs: build-dockerfiles
    strategy:
      matrix:
        database: [postgres, mysql, sqlite, redis]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run isolated database test suite
        run: |
          echo "ðŸš€ Running isolated test suite for ${{ matrix.database }}..."
          echo "ðŸ“Š This test only builds the ${{ matrix.database }} container (not all databases)"
          echo "âš¡ Expected speedup: ~3x faster than previous approach"
          time make test-${{ matrix.database }}

      - name: Verify container isolation
        run: |
          echo "ðŸ“‹ Containers that were created during this test:"
          docker ps -a --format "table {{.Names}}\t{{.Image}}\t{{.Status}}" | grep -E "(test-runner|mcp-|${{ matrix.database }})" || echo "No containers found"
        
      - name: Cleanup
        if: always()
        run: |
          docker-compose -f tests/docker-compose.test-${{ matrix.database }}.yml down -v || true
